{"version":3,"sources":["images/Vector.svg","components/Header.js","utils/api.js","images/avataricon.svg","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","api","options","this","_token","token","_url","url","res","ok","json","Promise","reject","status","fetch","headers","authorization","then","_getResponseData","userName","userJob","method","body","JSON","stringify","name","about","cardName","cardLink","link","id","cardId","avatar","Card","props","card","onClick","onCardClick","type","likes","length","Main","React","useState","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","useEffect","getProfileInfo","result","catch","err","console","log","finally","style","backgroundImage","onEditAvatar","onEditProfile","onAddPlace","cards","map","i","Footer","PopupWithForm","isOpen","onClose","title","children","ImagePopup","placeholder","required","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","setСards","selectedCard","setSelectedCard","closeAllPopups","getInitialCards","handleEsc","event","keyCode","document","addEventListener","removeEventListener","closeByOverlay","evt","target","classList","contains","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"qNAAe,G,MAAA,IAA0B,oC,OCW1BA,MARf,WACE,OACE,wBAAQC,UAAU,uBAAlB,SACA,qBAAKA,UAAU,eAAeC,IAAKC,EAAMC,IAAI,kD,cCwGpCC,EAAM,I,WA7Gf,WAAYC,GAAU,oBAClBC,KAAKC,OAASF,EAAQG,MACtBF,KAAKG,KAAOJ,EAAQK,I,oDAGxB,SAAiBC,GACb,OAAKA,EAAIC,GAGFD,EAAIE,OAFAC,QAAQC,OAAR,gDAA0BJ,EAAIK,W,6BAK7C,WAAmB,IAAD,OACd,OAAOC,MAAM,GAAD,OAAIX,KAAKG,KAAT,UAAuB,CAC3BS,QAAS,CACLC,cAAeb,KAAKC,UAG3Ba,MAAK,SAAAT,GAAG,OAAI,EAAKU,iBAAiBV,Q,4BAG3C,WAAkB,IAAD,OACb,OAAOM,MAAM,GAAD,OAAIX,KAAKG,KAAT,aAA0B,CAC9BS,QAAS,CACLC,cAAeb,KAAKC,UAG3Ba,MAAK,SAAAT,GAAG,OAAI,EAAKU,iBAAiBV,Q,4BAG3C,SAAeW,EAAUC,GAAU,IAAD,OAC9B,OAAON,MAAM,GAAD,OAAIX,KAAKG,KAAT,aAA0B,CAC9Be,OAAQ,QACRN,QAAS,CACLC,cAAeb,KAAKC,OACpB,eAAgB,oBAEpBkB,KAAMC,KAAKC,UAAU,CACjBC,KAAMN,EACNO,MAAON,MAGdH,MAAK,SAAAT,GAAG,OAAI,EAAKU,iBAAiBV,Q,qBAK3C,SAAQmB,EAAUC,GAAW,IAAD,OACxB,OAAOd,MAAM,GAAD,OAAIX,KAAKG,KAAT,UAAuB,CAC3Be,OAAQ,OACRN,QAAS,CACLC,cAAeb,KAAKC,OACpB,eAAgB,oBAEpBkB,KAAMC,KAAKC,UAAU,CACjBC,KAAME,EACNE,KAAMD,MAGbX,MAAK,SAAAT,GAAG,OAAI,EAAKU,iBAAiBV,Q,qBAI3C,SAAQsB,GAAK,IAAD,OACR,OAAOhB,MAAM,GAAD,OAAIX,KAAKG,KAAT,wBAA6BwB,GAAM,CACvCT,OAAQ,MACRN,QAAS,CACLC,cAAeb,KAAKC,UAG3Ba,MAAK,SAAAT,GAAG,OAAI,EAAKU,iBAAiBV,Q,wBAG3C,SAAWsB,GAAK,IAAD,OACX,OAAOhB,MAAM,GAAD,OAAIX,KAAKG,KAAT,wBAA6BwB,GAAM,CACvCT,OAAQ,SACRN,QAAS,CACLC,cAAeb,KAAKC,UAG3Ba,MAAK,SAAAT,GAAG,OAAI,EAAKU,iBAAiBV,Q,wBAG3C,SAAWuB,GAAS,IAAD,OACf,OAAOjB,MAAM,GAAD,OAAIX,KAAKG,KAAT,kBAAuByB,GAAU,CACrCV,OAAQ,SACRN,QAAS,CACLC,cAAeb,KAAKC,UAG3Ba,MAAK,SAAAT,GAAG,OAAI,EAAKU,iBAAiBV,Q,0BAG3C,SAAaD,GAAM,IAAD,OACd,OAAOO,MAAM,GAAD,OAAIX,KAAKG,KAAT,oBAAiC,CACzCe,OAAQ,QACRN,QAAS,CACLC,cAAeb,KAAKC,OACpB,eAAgB,oBAEpBkB,KAAMC,KAAKC,UAAU,CACjBQ,OAAQzB,MAEbU,MAAK,SAAAT,GAAG,OAAI,EAAKU,iBAAiBV,U,KAM1B,CAAQ,CACvBD,IAAI,8CACJF,MAAO,yCChHI,MAA0B,uCCwB1B4B,MAtBf,SAAcC,GAMZ,OACE,0BAASrC,UAAU,OAAOiC,GAAG,OAA7B,UACC,qBAAKjC,UAAU,cAAcC,IAAKoC,EAAMC,KAAKN,KAAM7B,IAAKkC,EAAMC,KAAKV,KAAMW,QAN1E,WACIF,EAAMG,YAAYH,EAAMC,SAM3B,sBAAKtC,UAAU,aAAf,UACG,oBAAIA,UAAU,cAAd,SAA6BqC,EAAMC,KAAKV,OACxC,sBAAK5B,UAAU,mBAAf,UACG,wBAAQyC,KAAK,SAASzC,UAAU,sBAChC,uBAAOA,UAAU,oBAAjB,SAAsCqC,EAAMC,KAAKI,MAAMC,eAG7D,wBAAQF,KAAK,SAASzC,UAAU,2DCwCtB4C,MArDf,SAAeP,GACX,MAAgCQ,IAAMC,WAAtC,mBAAOxB,EAAP,KAAiByB,EAAjB,KACA,EAAgDF,IAAMC,WAAtD,mBAAOE,EAAP,KAAyBC,EAAzB,KACA,EAAoCJ,IAAMC,WAA1C,mBAAOI,EAAP,KAAmBC,EAAnB,KAiBF,OAfEN,IAAMO,WAAU,WACZhD,EAAIiD,iBACHjC,MAAK,SAACkC,GACHP,EAAYO,EAAO1B,MACnBqB,EAAmBK,EAAOzB,OAC1BsB,EAAcG,EAAOnB,WAGxBoB,OAAM,SAACC,GACJC,QAAQC,IAAIF,MAEfG,SAAQ,iBAET,IAGJ,uBAAM3D,UAAU,UAAhB,UACA,0BAASA,UAAU,wBAAnB,UACI,sBAAKA,UAAU,uBAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAU,kBAAkB4D,MAAO,CAAEC,gBAAgB,OAAD,OAASX,EAAT,QACzD,qBAAKX,QAASF,EAAMyB,aAAc9D,UAAU,qBAAqBC,IAAKkC,EAAQhC,IAAI,sFAEtF,sBAAKH,UAAU,gBAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,oBAAIA,UAAU,gBAAd,SAA+BsB,IAC/B,wBAASiB,QAASF,EAAM0B,cAAgBtB,KAAK,SAASzC,UAAU,uBAAuB,aAAW,sFAGtG,mBAAGA,UAAU,eAAb,SAA6BgD,UAGrC,wBAAQP,KAAK,SAASF,QAASF,EAAM2B,WAAahE,UAAU,sBAAsB,aAAW,wDAIjG,yBAASA,UAAU,sBAAsBiC,GAAG,QAA5C,SACKI,EAAM4B,MAAMC,KAAI,SAAC5B,EAAM6B,GAAP,OACb,8BACD,cAAC,EAAD,CAAM7B,KAAMA,EAAME,YAAaH,EAAMG,eAD1B2B,YCtCPC,MARf,WACE,OACE,wBAAQpE,UAAU,uBAAlB,SACA,mBAAGA,UAAU,oBAAb,wCCiBWqE,MApBf,SAAwBhC,GAEtB,OACF,qBAAKrC,UAAS,2BAAsBqC,EAAMT,KAA5B,YAAoCS,EAAMiC,OAAS,eAAiB,IAAlF,SACG,qBAAKtE,UAAS,4CAAwCqC,EAAMT,MAA5D,SACI,sBAAM5B,UAAS,kCAA6BqC,EAAMT,MAAlD,SACI,2BAAU5B,UAAU,kBAApB,UACI,wBAAQyC,KAAK,SAASF,QAAUF,EAAMkC,QAASvE,UAAS,yCAAoCqC,EAAMT,MAAlG,SACA,qBAAK5B,UAAU,wBAEf,oBAAIA,UAAU,eAAd,SAA8BqC,EAAMmC,QACnCnC,EAAMoC,mBCGPC,MAdf,SAAoBrC,GAClB,OACE,qBAAKrC,UAAS,+BAA0BqC,EAAMC,KAAKN,KAAO,eAAiB,IAA3E,SACI,uBAAMC,GAAG,aAAajC,UAAU,aAAhC,UACI,wBAAQyC,KAAK,SAASzC,UAAU,qCAAqCuC,QAASF,EAAMkC,QAApF,SACQ,qBAAKvE,UAAU,wBAEvB,qBAAKA,UAAU,eAAeC,IAAG,UAAKoC,EAAMC,KAAKN,MAAQ7B,IAAI,yCAC7D,uBAAOsC,KAAK,OAAOzC,UAAU,cAAc4B,KAAK,iBAAiB+C,YAAY,mDAAWC,UAAQ,EAAhG,SAAkGvC,EAAMC,KAAKV,aC+H1GiD,MAhIf,WAEA,MAA4DhC,IAAMC,UAAS,GAA3E,mBAAOgC,EAAP,KAA+BC,EAA/B,KACA,EAAsDlC,IAAMC,UAAS,GAArE,mBAAOkC,EAAP,KAA4BC,EAA5B,KACA,EAA0DpC,IAAMC,UAAS,GAAzE,mBAAOoC,EAAP,KAA8BC,EAA9B,KACA,EAA0BtC,IAAMC,SAAS,IAAzC,mBAAOmB,EAAP,KAAcmB,EAAd,KACA,EAAwCvC,IAAMC,SAAS,IAAvD,mBAAOuC,EAAP,KAAqBC,EAArB,KA2DI,SAASC,IACLJ,GAAyB,GACzBJ,GAA0B,GAC1BE,GAAuB,GACvBK,EAAgB,IAIpB,OA/DJzC,IAAMO,WAAU,WACZhD,EAAIoF,kBACHpE,MAAK,SAACkC,GACH8B,EAAS9B,MAGZC,OAAM,SAACC,GACJC,QAAQC,IAAIF,MAEfG,SAAQ,iBAET,IAEFd,IAAMO,WAAU,WACd,IAAMqC,EAAY,SAACC,GACM,KAAlBA,EAAMC,SACTJ,KAIJ,OADCK,SAASC,iBAAiB,UAAWJ,GAC/B,WACNG,SAASE,oBAAoB,UAAWL,MAExC,IAEH5C,IAAMO,WAAU,WACd,IAAM2C,EAAiB,SAACC,GAChBA,EAAIC,OAAOC,UAAUC,SAAS,UAC9BZ,KAKR,OAFCK,SAASC,iBAAiB,YAAaE,GAEjC,WACNH,SAASE,oBAAoB,YAAaC,MAE1C,IA2BO,qCACR,qBAAK/F,UAAU,cACf,sBAAKA,UAAU,OAAf,UACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAMiE,MAAOA,EAAOzB,YA5BpB,SAAyBF,GACtBgD,EAAgBhD,IA2BgCwB,aAxBnD,WACIqB,GAAyB,IAuB2DpB,cApBxF,WACIgB,GAA0B,IAmBiGf,WAhB/H,WACIiB,GAAuB,MAgB3B,cAAC,EAAD,OAGA,cAAC,EAAD,CAAerD,KAAK,OAAO4C,MAAM,4HAAwBF,OAAQQ,EAAwBP,QAASgB,EAAlG,SACI,sBAAKvF,UAAU,kBAAf,UACA,uBAAOyC,KAAK,OAAOzC,UAAU,sCAAsCiC,GAAG,OAAOL,KAAK,YAAY+C,YAAY,qBAAMC,UAAQ,IACxH,sBAAM5E,UAAU,kCAChB,uBAAOyC,KAAK,OAAOzC,UAAU,qCAAqCiC,GAAG,MAAML,KAAK,WAAW+C,YAAY,kCAASC,UAAQ,IACxH,sBAAM5E,UAAU,iCAChB,wBAAQyC,KAAK,SAASzC,UAAU,gBAAhC,yEAIJ,cAAC,EAAD,CAAe4B,KAAK,MAAM4C,MAAM,gEAAcF,OAAQU,EAAqBT,QAASgB,EAApF,SACI,sBAAKvF,UAAU,kBAAf,UACA,uBAAOyC,KAAK,OAAOzC,UAAU,sCAAsCiC,GAAG,MAAML,KAAK,OAAO+C,YAAY,mDAAWC,UAAQ,IACvH,sBAAM5E,UAAU,iCAChB,uBAAOyC,KAAK,MAAMzC,UAAU,sCAAsCiC,GAAG,MAAML,KAAK,OAAO+C,YAAY,qGAAqBC,UAAQ,IAChI,sBAAM5E,UAAU,iCAChB,wBAAQyC,KAAK,SAASzC,UAAU,uCAAhC,6DAIJ,cAAC,EAAD,CAAe4B,KAAK,SAAS4C,MAAM,wFAAkBF,OAAQY,EAAuBX,QAASgB,EAA7F,SACI,sBAAKvF,UAAU,kBAAf,UACA,uBAAOyC,KAAK,MAAMzC,UAAU,sCAAsCiC,GAAG,SAASL,KAAK,SAAS+C,YAAY,wCAAwCC,UAAQ,IACxJ,sBAAM5E,UAAU,oCAChB,wBAAQyC,KAAK,SAASzC,UAAU,uCAAhC,yEAIJ,qBAAKA,UAAU,4BAAf,SACI,qBAAKA,UAAU,mBAAf,SACI,sBAAMiC,GAAG,mBAAmBL,KAAK,gBAAgB5B,UAAU,cAA3D,SACI,2BAAUA,UAAU,kBAApB,UACI,wBAAQyC,KAAK,SAASzC,UAAU,0CAAhC,SACA,qBAAKA,UAAU,wBAEf,uBAAOA,UAAU,0CAAjB,sEACA,wBAAQyC,KAAK,SAASzC,UAAU,4CAAhC,mCAMhB,cAAC,EAAD,CAAYsC,KAAM+C,EAAcd,QAASgB,QCxH9Ba,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlF,MAAK,YAAkD,IAA/CmF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlB,SAASmB,eAAe,SAM1BX,M","file":"static/js/main.c540eb16.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Vector.bbe2a6ea.svg\";","import React from 'react';\r\nimport logo from './../images/Vector.svg'; // Путь к изображению внутри сборки\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header root__section\">\r\n    <img className=\"header__logo\" src={logo} alt=\"Логотип\"/>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;"," class Api {\r\n    constructor(options) {\r\n        this._token = options.token;\r\n        this._url = options.url;\r\n    }\r\n\r\n    _getResponseData(res) {\r\n        if (!res.ok) {\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n        }\r\n        return res.json();\r\n    }\r\n\r\n    getInitialCards() {\r\n        return fetch(`${this._url}/cards`, {\r\n                headers: {\r\n                    authorization: this._token\r\n                }\r\n            })\r\n            .then(res => this._getResponseData(res))\r\n    }\r\n\r\n    getProfileInfo() {\r\n        return fetch(`${this._url}/users/me`, {\r\n                headers: {\r\n                    authorization: this._token\r\n                }\r\n            })\r\n            .then(res => this._getResponseData(res));\r\n    }\r\n\r\n    setProfileEdit(userName, userJob) {\r\n        return fetch(`${this._url}/users/me`, {\r\n                method: 'PATCH',\r\n                headers: {\r\n                    authorization: this._token,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    name: userName,\r\n                    about: userJob\r\n                })\r\n            })\r\n            .then(res => this._getResponseData(res));\r\n\r\n    }\r\n\r\n\r\n    addCard(cardName, cardLink) {\r\n        return fetch(`${this._url}/cards`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    authorization: this._token,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    name: cardName,\r\n                    link: cardLink\r\n                })\r\n            })\r\n            .then(res => this._getResponseData(res))\r\n    }\r\n\r\n\r\n    addLike(id) {\r\n        return fetch(`${this._url}/cards/likes/${id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    authorization: this._token\r\n                }\r\n            })\r\n            .then(res => this._getResponseData(res))\r\n    }\r\n\r\n    deleteLike(id) {\r\n        return fetch(`${this._url}/cards/likes/${id}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    authorization: this._token\r\n                }\r\n            })\r\n            .then(res => this._getResponseData(res))\r\n    }\r\n\r\n    deleteCard(cardId) {\r\n        return fetch(`${this._url}/cards/${cardId}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    authorization: this._token\r\n                }\r\n            })\r\n            .then(res => this._getResponseData(res))\r\n    }\r\n\r\n    changeAvatar(url) {\r\n        return fetch(`${this._url}/users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                avatar: url\r\n            })\r\n        }).then(res => this._getResponseData(res))\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const api = new Api({\r\n    url: `https://mesto.nomoreparties.co/v1/cohort-25`,\r\n    token: 'e2f184c2-a2b5-47dc-b13c-5faef2aabe75'\r\n});","export default __webpack_public_path__ + \"static/media/avataricon.ae1a976d.svg\";","import React from 'react';\r\n\r\nfunction Card(props) {\r\n\r\n    function handleClick() {\r\n        props.onCardClick(props.card);\r\n      } \r\n\r\n  return (  \r\n    <article className=\"card\" id=\"card\">\r\n     <img className=\"card__image\" src={props.card.link} alt={props.card.name} onClick={handleClick}/>\r\n     <div className=\"card__text\">\r\n        <h2 className=\"card__title\">{props.card.name}</h2>\r\n        <div className=\"card__like-group\">\r\n           <button type=\"button\" className=\"card__vector-like\"></button>\r\n           <label className=\"card__amount-like\">{props.card.likes.length}</label>\r\n        </div>\r\n     </div>\r\n     <button type=\"button\" className=\"card__vector-delete card__vector-delete_type_activ\" />\r\n     </article>\r\n   \r\n  );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport {api} from \"./../utils/api\";\r\nimport avatar from \"./../images/avataricon.svg\";\r\nimport Card from './Card';\r\n\r\nfunction Main (props) {\r\n    const [userName, setUserName] = React.useState();\r\n    const [userDescription , setUserDescription ] = React.useState();\r\n    const [userAvatar, setUserAvatar] = React.useState();\r\n  \r\n    React.useEffect(() => {\r\n        api.getProfileInfo()\r\n        .then((result) => {\r\n            setUserName(result.name);\r\n            setUserDescription(result.about);\r\n            setUserAvatar(result.avatar);\r\n        })\r\n\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n        .finally(() => {       \r\n        });\r\n      },[]);\r\n\r\n  return (\r\n    <main className=\"content\">\r\n    <section className=\"profile root__section\">\r\n        <div className=\"profile__avatar-info\">\r\n            <div className=\"profile__change-avatar\">\r\n                <div className=\"profile__avatar\" style={{ backgroundImage: `url(${userAvatar})`  }}  />\r\n                <img onClick={props.onEditAvatar} className=\"profile__edit-icon\" src={avatar} alt=\"Редактировать\"/>\r\n            </div>\r\n            <div className=\"profile__info\">\r\n                <div className=\"profile__info-name\">\r\n                    <h1 className=\"profile__name\">{userName}</h1>\r\n                    <button  onClick={props.onEditProfile}  type=\"button\" className=\"profile__edit-button\" aria-label=\"Редактировать\">     \r\n                    </button>\r\n                </div>\r\n                <p className=\"profile__job\">{userDescription}</p>\r\n            </div>\r\n        </div>\r\n        <button type=\"button\" onClick={props.onAddPlace}  className=\"profile__add-button\" aria-label=\"Добавить\">                   \r\n       </button>\r\n    </section>\r\n\r\n    <section className=\"cards root__section\" id=\"cards\">\r\n       { props.cards.map((card, i) => (\r\n            <div key={i}>\r\n           <Card card={card} onCardClick={props.onCardClick} /> \r\n           </div> \r\n        ))}\r\n\r\n    </section>\r\n</main>\r\n  );\r\n}\r\n\r\nexport default Main ;","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer root__section\">\r\n    <p className=\"footer__copyright\"> &copy; 2021 Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction PopupWithForm (props) {\r\n\r\n  return (\r\n<div className={`popup popup_type_${props.name} ${props.isOpen ? \"popup_opened\" : \"\"}`}>   \r\n   <div className= {`popup__container popup__container-${props.name}`}>\r\n       <form className={`popup__form popup__form-${props.name}`}>\r\n           <fieldset className=\"popup__form-set\">\r\n               <button type=\"button\" onClick ={props.onClose} className={`popup__close popup__close_type_${props.name}`}> \r\n               <div className=\"popup__close-icon\"></div>\r\n               </button>\r\n               <h2 className=\"popup__title\">{props.title}</h2>\r\n               {props.children}\r\n           </fieldset>\r\n       </form>\r\n   </div>\r\n</div>\r\n   \r\n  );\r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n  return (\r\n    <div className={`popup popup_type_img ${props.card.link ? \"popup_opened\" : \"\"}`}>\r\n        <form id=\"imagePopup\" className=\"popup__img\">\r\n            <button type=\"button\" className=\"popup__close popup__close_type_img\" onClick={props.onClose}> \r\n                    <div className=\"popup__close-icon\"></div>\r\n                </button>\r\n            <img className=\"popup__image\" src={`${props.card.link}`} alt=\"Ссылка\" />\r\n            <label type=\"text\" className=\"popup__name\" name=\"nameInputImage\" placeholder=\"Название\" required>{props.card.name}</label>\r\n        </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;","import React from \"react\";\nimport './../pages/index.css';\nimport Header from './Header';\nimport Main  from './Main';\nimport Footer  from './Footer';\nimport PopupWithForm   from './PopupWithForm';\nimport ImagePopup   from './ImagePopup';\nimport {api} from \"./../utils/api\";\n\nfunction App () {\n// Хук, управляющий внутренним состоянием.\nconst [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\nconst [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\nconst [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\nconst [cards, setСards] = React.useState([]);\nconst [selectedCard, setSelectedCard] = React.useState({});\n\n\n      \nReact.useEffect(() => {\n    api.getInitialCards()\n    .then((result) => {\n        setСards(result);        \n    })\n\n    .catch((err) => {\n        console.log(err);\n    })\n    .finally(() => {       \n    });\n  },[]);\n\n  React.useEffect(() => {\n    const handleEsc = (event) => {\n       if (event.keyCode === 27) {\n        closeAllPopups();\n      }\n    };\n     document.addEventListener('keydown', handleEsc);\n    return () => {\n     document.removeEventListener('keydown', handleEsc);\n    };\n  }, []);\n\n  React.useEffect(() => {\n    const closeByOverlay = (evt) => {\n        if (evt.target.classList.contains('popup')) {\n            closeAllPopups();\n          }\n      }\n     document.addEventListener('mousedown', closeByOverlay);\n\n    return () => {\n     document.removeEventListener('mousedown', closeByOverlay);\n    };\n  }, []);\n\n\n    function handleCardClick(card) {\n       setSelectedCard(card);\n    }\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n    \n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n    \n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function closeAllPopups () {\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setSelectedCard({});\n    }\n\n\n    return (<>\n    <div className=\"root-page\"/>     \n    <div className=\"root\">\n    <Header />\n    <Main cards={cards} onCardClick={handleCardClick}  onEditAvatar={handleEditAvatarClick} onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick}/>\n    <Footer />      \n    </div>\n\n    <PopupWithForm name=\"edit\" title=\"Редактировать профиль\" isOpen={isEditProfilePopupOpen} onClose={closeAllPopups}>\n        <div className=\"form__container\">\n        <input type=\"text\" className=\"popup__input popup__input_type_name\" id=\"name\" name=\"nameInput\" placeholder=\"Имя\" required  />\n        <span className=\"popup__input-error name-error\"></span>\n        <input type=\"text\" className=\"popup__input popup__input_type_job\" id=\"job\" name=\"jobInput\" placeholder=\"О себе\" required  />\n        <span className=\"popup__input-error job-error\"></span>\n        <button type=\"submit\" className=\"popup__button\">Сохранить</button>\n        </div>\n    </PopupWithForm>\n\n    <PopupWithForm name=\"add\" title=\"Новое место\" isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}>\n        <div className=\"form__container\">\n        <input type=\"text\" className=\"popup__input popup__input_type_text\" id=\"add\" name=\"name\" placeholder=\"Название\" required />\n        <span className=\"popup__input-error add-error\"></span>\n        <input type=\"url\" className=\"popup__input popup__input_type_link\" id=\"url\" name=\"link\" placeholder=\"Ссылка на картинку\" required />\n        <span className=\"popup__input-error url-error\"></span>\n        <button type=\"submit\" className=\"popup__button popup__button_type_add\">Создать</button>\n        </div>\n    </PopupWithForm>\n\n    <PopupWithForm name=\"avatar\" title=\"Обновить аватар\" isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}>\n        <div className=\"form__container\">\n        <input type=\"url\" className=\"popup__input popup__input_type_text\" id=\"avatar\" name=\"avatar\" placeholder=\"https://somewebsite.com/someimage.jpg\" required />\n        <span className=\"popup__input-error avatar-error\"></span>\n        <button type=\"submit\" className=\"popup__button popup__button_type_add\">Сохранить</button>\n        </div>\n    </PopupWithForm>\n\n    <div className=\"popup popup_type_question\">\n        <div className=\"popup__container\">\n            <form id=\"newQuestionPopup\" name=\"questionPopup\" className=\"popup__form\">\n                <fieldset className=\"popup__form-set\">\n                    <button type=\"button\" className=\"popup__close popup__close_type_question\"> \n                    <div className=\"popup__close-icon\"></div>\n                </button>\n                    <label className=\"popup__title popup__title_type_question\">Вы уверены?</label>\n                    <button type=\"submit\" className=\"popup__button popup__button_type_question\">Да</button>\n                </fieldset>\n            </form>\n        </div>\n    </div>\n \n    <ImagePopup card={selectedCard} onClose={closeAllPopups}/>  \n  </>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}